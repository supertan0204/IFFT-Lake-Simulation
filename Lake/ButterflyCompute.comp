#version 440 core
#define M_PI 3.1415926535897932384626433832795

layout (local_size_x = 1, local_size_y = 1) in;

layout (binding = 2, rgba32f) uniform image2DArray tex2; // contains 3 layers, the first is butterfly texture, the second is pingpong0, and the last is pingpong1

uniform int stage; // current stage of the FFT execution
uniform int pingpong; // which pingpong texture serves as input and output buffer
uniform int direction; // horizontal or vertical

struct complex{
    float real;
	float im;
};

complex mul(complex c0, complex c1){
    complex c;
	c.real = c0.real * c1.real - c0.im * c1.im;
	c.im = c0.real * c1.im + c0.im * c1.real;
	return c;
}

complex add(complex c0, complex c1){
    complex c;
	c.real = c0.real + c1.real;
	c.im = c0.im + c1.im;
	return c;
}



void horizontalButterflies(){
    complex H;
	ivec2 x = ivec2(gl_GlobalInvocationID.xy);

	if(pingpong == 0){
	    vec4 data = imageLoad(tex2, ivec3(ivec2(stage, x.x), 0)).rgba;
		vec2 p_ = imageLoad(tex2, ivec3(ivec2(data.z, x.y), 1)).rg;
		vec2 q_ = imageLoad(tex2, ivec3(ivec2(data.w, x.y), 1)).rg;
		vec2 w_ = vec2(data.x, data.y);

		complex p = complex(p_.x, p_.y);
		complex q = complex(q_.x, q_.y);
		complex w = complex(w_.x, w_.y);

		H = add(p, mul(w, q));

		imageStore(tex2, ivec3(x, 2), vec4(H.real, H.im, 0, 1));
	}
	else if(pingpong == 1){
	    vec4 data = imageLoad(tex2, ivec3(ivec2(stage, x.x), 0)).rgba;
		vec2 p_ = imageLoad(tex2, ivec3(ivec2(data.z, x.y), 2)).rg;
		vec2 q_ = imageLoad(tex2, ivec3(ivec2(data.w, x.y), 2)).rg;
		vec2 w_ = vec2(data.x, data.y);

		complex p = complex(p_.x, p_.y);
		complex q = complex(q_.x, q_.y);
		complex w = complex(w_.x, w_.y);

		H = add(p, mul(w, q));

		imageStore(tex2, ivec3(x, 1), vec4(H.real, H.im, 0, 1));
	}
}

void verticalButterflies(){
    complex H;
	ivec2 x = ivec2(gl_GlobalInvocationID.xy);

	if(pingpong == 0){
	    vec4 data = imageLoad(tex2, ivec3(ivec2(stage, x.y), 0)).rgba;
		vec2 p_ = imageLoad(tex2, ivec3(ivec2(x.x, data.z), 1)).rg;
		vec2 q_ = imageLoad(tex2, ivec3(ivec2(x.x, data.w), 1)).rg;
		vec2 w_ = vec2(data.x, data.y);

		complex p = complex(p_.x, p_.y);
		complex q = complex(q_.x, q_.y);
		complex w = complex(w_.x, w_.y);

		H = add(p, mul(w, q));

		imageStore(tex2, ivec3(x, 2), vec4(H.real, H.im, 0, 1));
	}
	else if(pingpong == 1){
	    vec4 data = imageLoad(tex2, ivec3(ivec2(stage, x.y), 0)).rgba;
		vec2 p_ = imageLoad(tex2, ivec3(ivec2(x.x, data.z), 2)).rg;
		vec2 q_ = imageLoad(tex2, ivec3(ivec2(x.x, data.w), 2)).rg;
		vec2 w_ = vec2(data.x, data.y);

		complex p = complex(p_.x, p_.y);
		complex q = complex(q_.x, q_.y);
		complex w = complex(w_.x, w_.y);

		H = add(p, mul(w, q));

		imageStore(tex2, ivec3(x, 1), vec4(H.real, H.im, 0, 1));
	}
}

void main(void){

    if(direction == 0) horizontalButterflies();
	else if (direction == 1) verticalButterflies();
}
